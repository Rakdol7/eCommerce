<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAP0AAADHCAMAAADlCqUFAAAABGdBTUEAALGPC/xhBQAAAJ9QTFRF////
        AAAAHAoAHQwADAAAs7Ct1tXSBAAAGgcAzszKmpeTGAAAube0vbu5lZKO7Ovq5eThIhIHEwAAi4eD+fn4
        9PPy3dza1NLQfHdzp6Shx8XDcm1p4+LgGQAAraqno6CdX1lUUktGSEA7hIB8Z2Fde3ZyjoqGKh4XQTk0
        OjErb2pmYVtWLyQdNSslTUZBamVgJxoQLSEXJxkMIgwAJRgTzLce6gAAGadJREFUeF7lXYta6jgQthdp
        JEIhtKCIylVFQThnz/s/285MJgFsUhDwyMF/v91tSy2dXGb+uSRcALpvzTBy4/0SbzhjZHeB8gkfyaCf
        8n3nibsgDFXiRiyiYNzWyPn+s8JVEAo1bjnxNJEiMgNjOmrwn5wRXlUYP/BxETUZRkJDBvMrvno+mAnV
        50MXBioSASKRkZqfXe8vw/iGD10YKzF/vAXUpyoKRnz1bLBVevme0VE6lXJ+bqpvu/RDLf1FNQjjc5v5
        u0vficOgqg/PBjuP/It8KtVAH54Ntkp/P611Nd97jUXzzJjfDhYvDmYk9G0QJl26ejYAtqPK2U4YhgHd
        UVFh8kSXzwbIdOX4ibntJp4mEXCcGP5d4K35UKoX+qPzQbmXEwbj7kCJkG69icP4zCY+erhM5YtQ6OHW
        gyho462XcFCjPzoj1PpN6cb9yy2YuysQ+hZv7CkRnx3Zhf7PPaBP82fwgem2dyXndOknYaGEIsrTSqLg
        DL38cjzC0CeGX4ODc4/0FVABoYnhp1LEE7r0g5DNJBPCvpIzOvhJuIuFJENvjd9PwgMITQy/Cwd+Xnym
        6IHQxPBzmPh3dOknASb+gGweTPxfZxnZL8NNLBRNfDR+Fbr0g3ANQl/jgTV+PwlpECaa4YPnQ6z3R2Eq
        5TvNd2C9yzPzcrdjlAhFht4av5+EWsDhrXYQxaN25V9H+1PjFxm+NvS/RaTifx5qOvqM/ODav9DEf40x
        zvmvQ8hg+gnKXk/CmAx9l1K6/zooJc1pmh1wFYfBoz66PANUZypieXZB/ixiimufCXrPQk75eAf01f38
        nAz9CPQXH+6AxzNLYH9O+o4KgzofnwHyFyk/kZhaS2A3rj3gsZF1+dwLvjGv8bkPXa2Ws233IZiBbvty
        jkkDfUs+4669xuKZJn46ZLNRBPmBF098VgJ945jP/NBZ0xGflYMyLhctPvOBldddHCY9OtoNDyaB3UlE
        5GQ8UWySHu7PLSLNG/NAlN4XRUqXTvyWWxlWFMUUeIURXXIvvJf2UtKZVO94sCvaUiQtPIC/jEIH21WR
        aNLLTkChSL7oAjCNPt6YLUUkSmgzcGodUQJ2XfY8gIQWJRe8FwnXu2nIKBIR9f0l+C16rOwITGAP6aiv
        xKzbufqADmhRHfC9BT/wtvC5RWdgioGGUg74ogMV+EIjvRr7nwfo3AIZozxLF0xT1XNv50GF8SvedfGm
        PluHchMLQTqjHoSqQ5c2gNlOXeYADVvGo0agQchneINmoCtuvCs9Ri7+E6XlNQCclvRKYJiVN/QGL64n
        bzsSepbujmsQirSVp3orV/ySOUyqsmdX4Q2p4aE9dTO4YaUXW6WHJ0X0pInRzQ5kYOU0uYdm+GwuHqaU
        zmOlnuotGNEv9PAFjCs6cAMnHfWPbQY3hkZ6JTiu5kVfMW8dKJ6eDnRBz5MRoWYoaXYXMpBO57Gwesvx
        x09JqFO8VZgDJZFfzInQAMRAUYmf+SJ3lR76Q3sh6fzen3DAlBS9Frhs25qziBZIRzbyFjqPycU6MMVL
        48lqADcwMEwf22ZwA6R/w/9nW6VHe0RzsSKFV+WgldNDdhTvwdrxZUmxVswQ2gRGfskmWg3gBtyn9QY2
        Q0lGHCaYJhBbuwqZG7U76CZvVR1OOGoZ1EumBnN3pE2hDQZQCufsQn1AT7UawAkrTQrSl9BNK33CrepF
        PRCCptBTIpq+uQSGeklDtwZj+DMsVyODv2/S0QS0vkNdgcLVZOIJuqCkyOM3t+KWTp1LXSqXwdPKCwUX
        MWsxsKFTjzprSGPlxorb6nPYVr2Fl2ncoQbQVN4JUOZ6jCxLk6IwQI30TPg9yJAX0QEqSrpUBDAB/U5p
        LLQ++SRW1VugNhyd1obPyQu2GsCNsQmRwltrre7EL8lDZJv0jWcuJuv98etHtHI0MNHS7JOGz5dbqrfu
        TZ4LBq3uXSeQ7NGL2GZwAqRnb2hLaAGDjiQPHnjUKCYitCYe7puOAhpzT0Kh8XNMbJh2un2RFfu/4TEQ
        ivSPbQYnzLzYKj3wXG3BwBTHDg6OwHozuqcHzbBf8dG26i2YW5puWw3gBNoey8r9XjYox92kx0akvriJ
        pa4nL6Ip2LVC5VVCMkqwqt5yW/QreE8yqVYDOAGOmFaathmcAOk1s4a7Si2UdRrBM/BMOOQq+oX2X1+U
        /WL6hV/oyAbkwAi0Em+WZbrbMD1Je+I7+b0N61eYNvcgnzPPxbC7x4agjSZzhZq7nDz4AVRZW3T0khxj
        FmmOMbz+AHgqhFbiOET86te4dih9mcfcDoXu17byDZJcCsNyYf77h1s57HzGXnvM0w/IYQZKauLHJIy7
        fLWABugzM6aTVuEpBiFL34DvqnvvStNr6FcaQUh4L1035tbK5b9kaUyhFKvqLSXCsFnAn5C14VUSiogv
        FrCMIracUoT+u0y0CqR3fNUKUchNXk98N0poSRqKqK7LxlE5YOJrvdJX8KUFhFGk6QZoANfnDBuv/CVL
        79LPgiYvuQu/lGfZIo7MsuEPgIbUebhXGCfeGbkVQOV12eZtwAs4PoKb9s33uUagX2ax5S7SjZkqvwvu
        0xr2qeQ+PTdA4zgDMzvCVm9dPNTdYBqQP/K5G4/a6GSldz3xs3p87gU/zftO8Cj90hhw9ZDBXYB6ysek
        Tx/opSb7GXsNcLp19da/iAp4Zx5CsBvApunqrX8RT8BS9mO5DKzeOmDmfCvyoZQzNxPeEchBePDknso1
        4/z1+NwJQxRLq9/YNuV86gPPRO9tZssUDGnvy3IZtnorH3Ba9CNCPbgeYj53QukBVOVTN+a6jXxfZDCg
        98ne+bSIvhYfyL4/0bMbnhJ+RDcAuueCzqZeDGI+dyLWZnem+NwJzdo7AZ/6YMg3nxYgtFuezj+ZuHUA
        ho8mIeBT8JYkG1ARz61XYF6+7oebtE/6Il3PICQRu3bglnkfFATAFk1myPmoGN5ySZPRhrQPQApupKZW
        UymmD1wCZnF9B1aF3gaYhWpd8+VNXNsaKDDAxWdoPMZMyUH6+Mn9IHjUQHIyEPzPZ8ej6jJkloshaX8s
        ZUf0jfMKxs/xNIxwkDuFOQ+fW15N+E8nsTcEjUENI32JnbJ5bk88t5qwB4h5SH/MYVfY6i3MChSNXzoz
        OQ8gRr7wMgxCnQSvJ+KPpz/QnyTpSxNeGQw18oNzd5wZM5a6fcHpLguz7whbvdX74wqlAJuUv+gIa/k9
        1rULb0ICPfjz7btJjwESugujbo5yjFXGclgWcNkZq+otd8IKCRV1J+5R45GsAi1I0wPHj0cylJ7EQZ+c
        BpsL6HbRAzDw4rgLNw2gyx1oBkco8tOw1VtPiRBF8Wwix2qAIjDtQOMHB5KHOtqwV6n0WI9BGh0bvdi1
        +dJkLFsgvXcEfQIYPqfn4PgtDrbePWdWUANobVsAmF49W3tN4YtYbkjvDcUtTHh1DAd0ZQNIzPXzl1IO
        Pfr1U6isVW85tCgmeqgMcqUBCsDMGwWH8RGe8YjS07AolR4YjA6SmYzvJt4UR71WIe0DsV69JWfF9oSp
        FtBVHIyOjA+irzTtApXsM0M2u49T26M/LtKE87tw4JAOrCaH4JGGHMc3vTHhLdRrxV7ZJZX7CnaeBuxA
        +UJNHfPXZdIjF6Amwr4tfhfGcunjHJqhJGH6GdjqLcwaFmdtGz6mbmj4N+poJSaRGfsSmVZ6bE1ft6F4
        1DKYZCve9G4ylvgMhz3cBz0TaXdXb+EUJJpjNUARj6baYpT4Um/YrZzv8ks/SsKYGg8tW6FvQXVwxhJY
        rh6uh2Ojeiss9hww7nu6OjIaoAAYPtoMVwMRuUWz0oON8UoPmkdrWOQedGUdNmPZgK/TVZpHwJbqLYyc
        kjqwGqCAK3gCD2tf/dSG9B42nD+bHD/4XoW8NAxCNoc4L+hZxwCqM1Im6MkUNS3OWO0EGw1QQNuUliFn
        cL+XdW6wib2+ACse/CZ63jrwCWQQYAqKpXsQ7gGs3tJN7qzeyszHGVhjt6MDTEhzBqywc6sjS+9Res+c
        xW6geyzhXQdmLEkldmCAHS8Oj3Hx33Q0gc7v8IbDK7yDX0UjDjRAs/gx4GrOnmAPhuxNj69uANU5CYQ1
        Dl2++AF2ByCa4XzRoDMzq09a8KmXL30e69VbIQdR1iDgIn0M880dukmw+B7vAJ8pUnxxE3FkpY/ChC9+
        gIqEwlsokFS4R7L7B99x1L1icEbReO0ltNdyCP9omCOt00ADrF1bHSB0XXE2VHxefAY7N1V8iOMZ9H89
        8XJcD4LYvI1nzNFYLiO3tRl9bucCSE9lcz5zQevoskU3v+nlO3zmhtZ1N3z2AfodgeX61OZ+GJsi9MwT
        cONvy/nUAaPpu3zuAOu6Cp+6YFRdjc83oKlv41kcHMvdBBrQI+qRL8W+5Yl+2OqtfwBgoHSx0dGQLfcr
        dv0GtMEr8QRZ9sa/s7suxr6OxnIZlouATq45YfRel88LYHqfeW+oMTmt8KkDfEePT9fBaglM6vG3P7fV
        W0B43OBlAl6TaIxVicnTaYqy7R70HRUnpdKabq9FOFuxNNXlWCnlgtaKKRA/D/TuvPmLoTsFMGEEuu6D
        0NEqoJ5FxFovjZJQeSPCe2NiyrCRihWTjIr3IKaiNL62ASCpS/wcPHM3G46B39LsGcUeuizhETSmgedK
        vsaQ0Pqa5c7AD6NeOirQqyJlAmw2Hn1c/FkZKDmlxgFHZ1njq2vovJpgzEKJGV9cR6cFN7D04rnLVzdg
        HMxsKOX7xhtUhtIswjE+8HHRsNVbSnA3r6OacIoKYxOukVeF6+SejRL32kUsticBbmJXRTRMqrnUEQ27
        NsNilbF8UyLUCui4mJrqrTflCM3ZNH/FGfnUcR9Sy2CRlCvuDdLr4v2JR3rMA9FX2LUZFpi4JZqbyi/i
        JbYi2RnewjS/jnB4VuWi40UzBwZH4gpYPwbinlrFJz0Gxeh7Mbm0ObzsIpwDyxP9sNVbuOa66EDCxNfa
        pu9eJYaxKOowXKtQaDxAFaRnzcGxkg9omew3zB29NsMA3ogzli9Klqx9OQCpWT1w8WyM3zrg3XSwFtca
        OxyihuREZgVGqcsJqScchPZJDzNOp5BtQxuAldO6Bpq4GOw8Dtb23vrQ9ggcGjT1cFY6Indgirj8PuRm
        +ACQXjsnr7FzZSfGFGlK27UZFpHgjOX+i3C2wlZvYTlQgUljbQMpYlvMsYnsnSOeuG7alcgE6bUnsfjY
        tRqYBafAaBvowEbzrWI5M1O4cXysqrdgEBfIZPZulsJjoqH49hmuGsWD3DTDB+CaWpJ+7Wdr1oGxcBpc
        haA4xnJo0mEA7sDyRC9WCWw0foX3AzL4h94eNIDL5MLnercj0wwfANLrvx8r55JpDPWSPkHFsm408sQU
        4d/EpRsBHAbQ5tp7wo0fCvLBfNDFElYDbALz2/TXuNSJrmwCKR59/uaW/i7mqjfMB68Pb2QSpEbz6Ngh
        rXXY6q1rGHsFq4rzgbxA1ACOiY3BMTJYmBdzTE6QXhcH9N2r7HDxHR2AcR9UOle164fq0+j1bfAsePdf
        JOOFBM/RgGSLaBzKVzAsqJPp9VYaYAP4btR22AwOsjeKuTQCpacriCxP014bZL00mbu0ibsfKXS0kiSO
        lRIRa9kFzH9qhi/BluotTOTQ68PEaBbFQ5VEE8Jy3k1Y6dGcX18+1keTxdvg/WU6+4Oygj3UHdvBlAKV
        DAsh7qVU8CHNOGAU3oLBY8BWb4FiK1ZvwcRIqHNRAxRjS5iB1DQdpMePsyyHjm1XOt3rh8d6y26MAi4w
        +a/UsVJKXGOli49ZyEBncWLZfJ6/vA/6Yz3ckeU69M3RgBSd3gCNToGvQafo3rEaYAOp4KtAyNTb6G7R
        Hwyns6bkWEEiI5b+XeHWWbZj4wSFTWIpxvTxRXfUqt9e1rqdSq+R5rkZg5hsLBY0HBEolr96CzgYkzHa
        GwFmbKPd6dYub0E5TUDWiFkoNAPuUqu4Y6lfUVgZazNfRVlVCB07HQ76iwnKet29qrTLRTt4Ec42bFZv
        bbwMDOMGFkXTCdCP8GXWXGUrQRqlwkhPS2gllJY7lj+X4XL2wiS1BrJ22r3UdutOeIKBzw/4IgBj0cYF
        GcclKOLbKiin8WA4/w1TFcNLRAMwCwvdilu8IaysnMrDBRoqmr0MxpNR/fEB+/WzohaBP2VJobOvA6pr
        0me4foJ6zegmHMEgqP60EkBXc7ciEvl7PuyPJ3WWME/1DD4OYIr1KrUh8LyisjkqenJVvbXZrSwrF0rd
        DvqvN62j9es6srTRq1yBOkGTCKNu+qtJDa0i9dW7va+qt0xUHmzgfDh4e72BMQyK+MjfT5qTZL2ttm5A
        c4L1XzYFiaupDg+7MBKx+NpZD7ClI/klGp1Km2zOcboWzT/0K/I6lBU4LFKdZ7CJK163bv5h0MGoM8Mu
        Hn+Zf2Nhq7cOBlEdzWHRJN6N3wbDlznafxLGdKwxiWgR12SFz8WfGVrE8R0Ou4faFnt4FGB4ax+jSrwO
        BzGbf+rY+XOkWBbu2Hvu2I9UJ1EoK/C6t4U1E2ASQaH8BZlXwCr07b8al4Gw0LEgK3HYm7txH2RdGlpn
        7ATISv2qO3alO2OQFanOO3Ts6Kn6cF1D8w9z7K+K6gKGFvlwDWh0gNcZWUETP6+yXTyItay0/6u1E9Sx
        IGwTexZ1J8iKHBb79dtFLQKXGWg/KkOjU31C5fQyb67SatyvKCrZRG0UrawIcE9+Td/BJq5k/f5u3QU2
        MpvpxbIfZV3rV/qccL+ca1nJNwEz8U+I6kB6b6LyAYjrkDVRyzlQWJyvWtZ/pFt3Qhu8WHLSu1S0GUfP
        02F/AbJqnxPN//kIW4CJTCDjT67J5JyxtB9hg3Pg5JVtJnmewOgRB2aFOqaj9k8AdxsjobFEg678JNzE
        XCI+didkzhsLXm4Jru5a0P2HAIXWBfIvvAHqTwLmayh1nj67gtZnDqzOodw1xra/LmV2ouhJXkCOmYuv
        zJucJLDmhkI7NZPV+Umw9VZYXPf1cbQTA+YnueRQRMT5fhKA3Ztq0tIfADlPjBIhSOhF/AOp3l0sn+kA
        WM/XVcicKkxME5O5rmLcswZW5JRWHJ418HdqKJeBdZNfsAbgtNEw7N7uHPWTAOzexDR/INXDnbS46CyU
        VV4H973o/j3OtbZzShTaTNX3Ilw4aoK/BJbdt7Zt/Pn3IBJJHfL1eAq4CPPqw3K4b4SMpN5/6MsxMcWk
        Fw1eCPftuHxRX16txMBf++HDk8Gxtxjx4yQDua0kPGiX+J2B1dN8eDoYxV9bnmtxk4S8H/bpoLMUf6lL
        ukko5KR6ShjN5NF20tuGCdj5E2E5jFhEsXPt4hcgXwRKbAEWdHwNkNsUIIPh38ukPwwjLKrzIfrzjPhz
        /BYI+cmbv5Ajw2n9r8YX017DhzRtXz7dTEaPV42ULx0LaaNWHU1G9evexpN7X1yY/BnUxgqruEAzTOvH
        fa32aAlzHJ8cThwrmk4AtWmgqJAL/gN+wM3xRmSvj9pNP1nEweD08ijZJFBRqLCED/7FrUdmx/K9Hu7j
        EJ8cYGEcLnBRpxZVy/sJGMN48VBJ016tNQXfS8XHYUZ1fFYwqKIyuXrs4+4twWmFVLNBAp7mnQ005A+z
        OJKquCrv86gHIgyGXWPTs6sBXiisAf9OTIJINje6Ou1DezwfHne5jkWYjNZ1SFaHS3+L3+2CbhDK6EOY
        M3uLo/jtUBqWzlUYf/TfH+NQitNJok6lXZSdXnV5mUT+og4vcWgFkVkOkVe6HR4DePVkyoZq9hV7C3QD
        XnSs/0od9Nt8iLQpeC+ZrP4MT470HMiH0LCn0vljeBea4V1tlyX/FOJr7Nx+5RPAje2oPihHKwLWPvhN
        rB4rZk/E7OVm76l2cI+b5SZhpFdd4vYrru1Vdkdf8arvF731GDyfVsBiPOtEgmxYuE1j/RX03Ptlt6VA
        JyMfwwK3w1bE/+Z2vQSbsqx2b2eK+9z+YMO3A9enorAN8LloGfWD+X2HQ+tZG2bwDMCxxjnUM79vjVPi
        b6UxyvEY6B0fcAyQ5tdL0AGHFrjgplY0quyv9GFtOH6X3U/821Fl6e0u6FmfC1pxR6xDpcf2zGKzww+u
        C9j4rm+HKdrHzb5oc4Lekjd1vYvvD/ppRlwIQyp/Znb4ATVI+yui0j8NV9eMQlDEYXKdXTSA5ekuM0XN
        +wKsia6MvUmiAEx9XgdmQe2KO2qdxtqQNvQ5KTkYBOCQ9JtxpH5hT+Fm+fusW13B7OrUC0SUzN6m+AXk
        OL8p55ZF34G5+fWAtyACz05E0lZ0GgK8J0bx2q+NSIVhA2rnHgwKzai+H7jlhZZyEiRKxcGShIeZwFxl
        b1wl5pcObwPc0CFghjeCbzyG+3wMNMDF4602K6PB++ul1nTYKIeGIYDQ8949afXtvV/Xc/0qFlL/lMUp
        4AaU0ViLvEJNCam3eT0AtSQsRglS9B5Pp2oqb8ooudu07DUJbu/hKxjugkhNN8VvvAOjPqVkcjeWYTxY
        M8B5NZZR8PpxPHwe6RAsyHJdd9bmcGV2OsENwAMIq6IbHX7I0od3DL7xbxIfhvYU943u84YmeXeM3/T8
        l2p1dsVlU4UiCYZ3o9ZN/w8FXhfHEB7EHwYY0J6PR63RYhrEYZhMTy6j0RkEKgxlnOBmCpGIjxd0zycJ
        iCxVkiRKQkMki8PM6Jcge4COkbgLgVCBujvmxLzqg7XHrenhycHgNLybIjr1wXMUNad35sdfjobe7XjW
        jKJZ/3Ffr/7i4n+TljljwBI3MQAAAABJRU5ErkJggg==
</value>
  </data>
</root>